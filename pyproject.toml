[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "thesis-transcript"
version = "1.0.0"
description = "Audio transcription tool for thesis research using OpenAI Whisper"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Charles", email = "your.email@example.com"},
]
keywords = ["audio", "transcription", "whisper", "speech-recognition", "filipino"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "openai-whisper>=20231117",
    "torch>=2.0.0",
    "torchaudio>=2.0.0",
    "pydub>=0.25.1",
    "librosa>=0.10.1",
    "soundfile>=0.12.1",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "pathlib2>=2.3.7",
    "ffmpeg-python>=0.2.0",
    "scipy>=1.11.0",
    "tqdm>=4.66.0",
    "tiktoken>=0.5.0",
    "regex>=2023.10.0",
    "Pillow>=10.0.0",
    "requests>=2.31.0",
]

[project.optional-dependencies]
gpu = [
    "torch>=2.0.0+cu118",
    "torchaudio>=2.0.0+cu118",
]
dev = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "isort>=5.12.0",
]
analysis = [
    "matplotlib>=3.8.0",
    "seaborn>=0.13.0",
    "jupyter>=1.0.0",
    "notebook>=7.0.0",
    "ipython>=8.0.0",
]
advanced = [
    "pyworld>=0.3.0",
    "praat-parselmouth>=0.4.0",
    "scikit-learn>=1.3.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/thesis-transcript"
Repository = "https://github.com/yourusername/thesis-transcript"
Issues = "https://github.com/yourusername/thesis-transcript/issues"

[project.scripts]
transcribe = "process_whisper:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["*.py"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.venv
  | whisper-env
  | audio_input
  | transcript_output
  | segments_output
  | text_output
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["process_whisper"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"
